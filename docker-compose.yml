services:
  # MariaDB Database
  database:
    image: mariadb:11.8.3
    container_name: warehouse-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/healthcheck.sh:/usr/local/bin/healthcheck.sh:ro
    networks:
      - warehouse-network
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: warehouse-api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      SERVER_PORT: ${SERVER_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    ports:
      - "${SERVER_PORT}:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - warehouse-network
    healthcheck:
      test: [ "CMD", "node", "healthcheck.js" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: warehouse-app
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - warehouse-network

volumes:
  db_data:

networks:
  warehouse-network:
    driver: bridge

